@model JN.Ordersystem.UI.Models.HomeViewModel

@{
    ViewData["Title"] = "Home Page";
}

<script src="~/js/site.js" asp-append-version="true"></script>

<div style="display: flex; flex-direction: column; align-items: flex-start; justify-content: center;">

    <img src="~/lib/Images/financial-graph.jpg" alt="Financial Graph" style="">
    <div style="width: 593px; display: flex; justify-content: center;">
        <img src="~/lib/Images/gross-profit-margin.png" alt="Gross Profit" style="margin-top: 60px"/>
    </div>
</div>


<div id="recentOrderContainer" style="position: absolute; top: 0; right: 0; width: 40%;">
    <h4>Most Recent Order:</h4>
    @if (Model.Order != null && Model.Order.Status != "Shipped")
    {
        <table class="custom-table custom-table-single-item">
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Date</th>
                    <th>Customer</th>
                    <th>Total Items</th>
                    <th>Sales Total</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Model.Order.OrderID
                    </td>
                    <td>
                        @Model.Order.OrderDate
                    </td>
                    <td>
                        @Model.Order.Customer.CustomerFullName
                    </td>
                    <td>
                    @{
                        int totalQuantity = 0;

                        foreach (var detail in Model.Order.OrderDetail)
                        {
                            totalQuantity += detail.Quantity;
                        }
                    }
                    @totalQuantity
                    </td>
                    <td>
                    @{
                        decimal totalSales = 0;

                        foreach (var detail in Model.Order.OrderDetail)
                        {
                            totalSales += detail.Quantity * detail.Product.Price;
                        }
                    }
                    € @totalSales
                    </td>
                    <td>
                        @Model.Order.Status
                    </td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <p>All orders have been processed. There are no orders that require further action.</p>
    }
</div>

<div id = "mostProfitableCustomer" style="/*position: absolute; top: 200px; right: 0; */">
    @if (Model.MostProfitableCustomer != null)
    {
        <h4>The most profitable customer is:</h4>
        <h4>@Model.MostProfitableCustomer.CustomerFullName</h4>
        <p>Total sales: € @Model.MaxSales</p>
    }
    else
    {
        <p>There are currently no orders.</p>
    }
</div>

<div id ="lowStockProductsContainer">
    <h4 style="margin-bottom: 0;">Low Units in Stock:</h4>
    <div>
    @if (Model.Products.Any())
    {
        <button type="button" id="resupplyButton" class="btn btn-primary">Resupply (+50 Units)</button>
        @Html.Partial("_LowStockProductsPartial", Model.Products)
    }
    else
    {
        <p>No products are currently low enough.</p>
    }
    </div>

</div>
